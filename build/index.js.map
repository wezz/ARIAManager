{"version":3,"sources":["webpack://ARIAManager/webpack/universalModuleDefinition","webpack://ARIAManager/./src/index.js","webpack://ARIAManager/./src/ARIAManager.ts","webpack://ARIAManager/webpack/bootstrap","webpack://ARIAManager/webpack/startup","webpack://ARIAManager/webpack/runtime/define property getters","webpack://ARIAManager/webpack/runtime/hasOwnProperty shorthand","webpack://ARIAManager/webpack/runtime/make namespace object"],"names":["root","factory","exports","module","define","amd","self","parent","controlelements","controlselector","delayAttribute","this","InitiateElements","window","addEventListener","e","detail","target","document","newElements","slice","call","querySelectorAll","filter","elm","dataset","ariamanager","forEach","bindEvents","concat","AriaExpand","value","bindEventsToTargetElements","dispatchEvent","customEvent","AriaHidden","GetARIAControllerFromTarget","targetid","getAttribute","indexOf","GetARIAControlTargets","element","targetselectors","split","targets","startWith","stringvalue","charvalue","selector","querySelector","push","onButtonClick","delay","getDelayValue","setTimeout","orgelm","bindEventsToControlElements","setAriaHidden","bind","setAriaExpanded","beforeClickEvent","adjustTargetStates","updateButtonState","attrElm","attr","targetHidden","hasAttribute","setAttribute","relatedControls","relatedControl","isHidden","delayValue","attributeValue","length","intAttributeValue","parseInt","isNaN","name","details","CustomEvent","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ARIAManager\"] = factory();\n\telse\n\t\troot[\"ARIAManager\"] = factory();\n})(self, function() {\nreturn ","import ARIAManager from \"./ARIAManager.ts\";\nexport default ARIAManager;\n// class MyLibrary {\n//   constructor() {\n//     console.log(\"Library constructor loaded\");\n//   }\n\n//   myMethod = () => {\n//     console.log(\"Library method fired\");\n//   };\n// }\n\n// export default MyLibrary;\n","/*\nThis script will respect WAI-ARIA attributes and update those attribute's states.\nThis is mostly used for toggling section visibility\n\nRegular Example:\n<button aria-controls=\"mycontent\" aria-pressed=\"false\">Toggle</button>\n<div id=\"mycontent\" aria-hidden=\"true\">Hidden until button is pressed</div>\n\n\nDelayed state change\n<button\n    aria-controls=\"mycontent\"\n    aria-pressed=\"false\"\n    data-ariamanager-delay=\"150\">Toggle</button>\n<div\n    id=\"mycontent\"\n    aria-hidden=\"true\">Hidden until button is pressed</div>\n*/\nexport default class AriaManager {\n  private controlelements: HTMLElement[] = [];\n  private controlselector = \"[aria-controls]\";\n  private delayAttribute = \"data-ariamanager-delay\";\n  constructor(parent = document) {\n    this.InitiateElements(parent);\n    window.addEventListener(\"global-markupchange\", (e) => {\n      this.InitiateElements((e as any)?.detail?.target ?? document);\n    });\n  }\n\n  public InitiateElements(parent = document) {\n    const controlElements = [].slice.call(\n      parent.querySelectorAll(this.controlselector)\n    );\n    const newElements = controlElements.filter((elm) => {\n      return (elm as HTMLElement).dataset.ariamanager !== \"activated\";\n    });\n    newElements.forEach((elm) => {\n      this.bindEvents(elm);\n      elm.dataset.ariamanager = \"activated\";\n    });\n    this.controlelements = ([] as HTMLElement[]).concat(\n      this.controlelements,\n      newElements\n    );\n  }\n\n  public AriaExpand(target: HTMLElement, value: boolean) {\n    if (target) {\n      this.bindEventsToTargetElements(target);\n      target.dispatchEvent(\n        this.customEvent(\"set-aria-expanded\", {\n          target: target,\n          value: value,\n        })\n      );\n    }\n  }\n\n  public AriaHidden(target: HTMLElement, value: boolean) {\n    if (target) {\n      this.bindEventsToTargetElements(target);\n      target.dispatchEvent(\n        this.customEvent(\"set-aria-hidden\", {\n          target: target,\n          value: value,\n        })\n      );\n    }\n  }\n\n  public GetARIAControllerFromTarget(target: HTMLElement) {\n    // GetButtonsFromTarget\n    const targetid = target.getAttribute(\"id\") + \"\";\n\n    if (targetid) {\n      const relatedControls = this.controlelements.filter(\n        (elm) =>\n          (elm.getAttribute(\"aria-controls\") + \"\").indexOf(targetid) !== -1\n      );\n      return relatedControls;\n    }\n    return [] as HTMLElement[];\n  }\n\n  public GetARIAControlTargets(element: HTMLElement) {\n    const targetselectors = (element.getAttribute(\"aria-controls\") + \"\").split(\n      \" \"\n    );\n    const targets: HTMLElement[] = [];\n    const startWith = (stringvalue: string, charvalue: string) =>\n      stringvalue.indexOf(charvalue) === 0;\n    targetselectors.forEach((selector) => {\n      selector =\n        (!startWith(selector, \"#\") && !startWith(selector, \".\") ? \"#\" : \"\") +\n        selector;\n      const target = document.querySelector(selector);\n      if (target) {\n        targets.push(target as HTMLElement);\n      }\n    });\n    return targets;\n  }\n\n  private onButtonClick(elm: HTMLElement) {\n    const delay = this.getDelayValue(elm);\n    elm.dispatchEvent(\n      this.customEvent(\"beforeClick\", {\n        delay: delay,\n        elm: elm,\n      })\n    );\n    window.setTimeout(() => {\n      elm.dispatchEvent(\n        this.customEvent(\"adjustTargetStates\", {\n          elm: elm,\n        })\n      );\n    }, delay);\n  }\n\n  private bindEvents(orgelm: Element) {\n    const elm = orgelm as HTMLElement;\n    this.bindEventsToControlElements(elm);\n    const targets = this.GetARIAControlTargets(elm); // Get target elements from button\n    targets.forEach((target) => {\n      this.bindEventsToTargetElements(target);\n    });\n  }\n\n  private bindEventsToTargetElements(target: HTMLElement) {\n    if (target.dataset[\"ariamanager_eventbindings\"] === \"true\") {\n      return;\n    }\n    target.addEventListener(\"set-aria-hidden\", this.setAriaHidden.bind(this));\n    target.addEventListener(\n      \"set-aria-expanded\",\n      this.setAriaExpanded.bind(this)\n    );\n    target.dataset[\"ariamanager_eventbindings\"] = \"true\";\n  }\n\n  private bindEventsToControlElements(elm: HTMLElement) {\n    elm.addEventListener(\"click\", this.onButtonClick.bind(this, elm));\n    elm.addEventListener(\"beforeClick\", this.beforeClickEvent.bind(this, elm));\n    elm.addEventListener(\n      \"adjustTargetStates\",\n      this.adjustTargetStates.bind(this, elm)\n    );\n    elm.addEventListener(\n      \"updateButtonState\",\n      this.updateButtonState.bind(this, elm)\n    );\n  }\n\n  private updateButtonState(elm: HTMLElement, e: any) {\n    const getAttrVal = (attrElm: HTMLElement, attr: string) =>\n      attrElm.hasAttribute(attr) ? attrElm.getAttribute(attr) : null;\n    const target = e.detail.target as HTMLElement;\n    const targetHidden = getAttrVal(target, \"aria-hidden\");\n    if (elm.hasAttribute(\"aria-pressed\")) {\n      elm.setAttribute(\"aria-pressed\", (targetHidden === \"false\") + \"\");\n    }\n    if (elm.hasAttribute(\"aria-expanded\")) {\n      elm.setAttribute(\"aria-expanded\", (targetHidden === \"false\") + \"\");\n    }\n  }\n  private setAriaHidden(e: any) {\n    const target = e.detail.target as HTMLElement;\n    const value = e.detail.value;\n    const relatedControls = this.GetARIAControllerFromTarget(target); // Gets controller from target\n    target.setAttribute(\"aria-hidden\", value);\n    target.dispatchEvent(\n      this.customEvent(\"aria-hidden-change\", {\n        target: target,\n        value: value,\n      })\n    );\n    relatedControls.forEach((relatedControl) => {\n      relatedControl.dispatchEvent(\n        this.customEvent(\"updateButtonState\", {\n          target: target,\n        })\n      );\n    });\n  }\n  private setAriaExpanded(e: any) {\n    const target = e.detail.target as HTMLElement;\n    const value = e.detail.value;\n    const relatedControls = this.GetARIAControllerFromTarget(target); // Gets controller from target\n    if (target.hasAttribute(\"data-aria-expanded\")) {\n      target.setAttribute(\"data-aria-expanded\", value + \"\");\n    }\n    target.dispatchEvent(\n      this.customEvent(\"aria-expanded-change\", {\n        target: target,\n        value: value,\n      })\n    );\n    relatedControls.forEach((relatedControl) => {\n      relatedControl.dispatchEvent(\n        this.customEvent(\"updateButtonState\", {\n          target: target,\n        })\n      );\n    });\n  }\n  private beforeClickEvent(elm: HTMLElement, e: any) {}\n  private adjustTargetStates(elm: HTMLElement, e: any) {\n    const targets = this.GetARIAControlTargets(elm); // Get target elements from button\n    targets.forEach((target) => {\n      if (target.hasAttribute(\"aria-hidden\")) {\n        const isHidden = target.getAttribute(\"aria-hidden\") === \"true\";\n        this.AriaHidden(target, !isHidden);\n      }\n      if (\n        elm.hasAttribute(\"aria-expanded\") ||\n        target.hasAttribute(\"data-aria-expanded\")\n      ) {\n        const isHidden = target.getAttribute(\"aria-hidden\") === \"true\";\n        this.AriaExpand(target, !isHidden);\n      }\n    });\n  }\n\n  private getDelayValue(elm: HTMLElement) {\n    let delayValue = 0;\n    const attributeValue = elm.getAttribute(this.delayAttribute);\n    if (typeof attributeValue === \"string\" && attributeValue.length > 0) {\n      const intAttributeValue = parseInt(attributeValue, 10);\n      if (!isNaN(intAttributeValue)) {\n        delayValue = intAttributeValue;\n      }\n    }\n    return delayValue;\n  }\n\n  private customEvent(name: string, details: object) {\n    return new CustomEvent(name, {\n      detail: details,\n    });\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(579);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}